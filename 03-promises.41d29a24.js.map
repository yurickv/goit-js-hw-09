{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SACzCF,EAAUG,iBAAiB,UAO3B,SAAuBC,GACrBA,EAAMC,iBAIN,IAFA,IAAIC,EAAQC,OAAOC,EAAWC,OAErBC,EAAI,EAAGA,EAAIC,EAAoBF,MAAOC,GAAK,EAElDE,EAAcF,EAAI,EAAGJ,GACpBO,MAAK,SAAAC,GAAWhB,EAAAiB,OAAOC,QAAQF,E,IAC/BG,OAAM,SAAAC,GAAUpB,EAAAiB,OAAOI,QAAQD,E,IAEhCZ,GAASC,OAAOa,EAAUX,M,IAhB9B,IAAID,EAAaR,EAAUqB,SAASf,MAChCc,EAAYpB,EAAUqB,SAASC,KAC/BX,EAAsBX,EAAUqB,SAASE,OAmB7C,SAASX,EAAcY,EAAUlB,GAC/B,IAAMmB,EAAgBC,KAAKC,SAAW,GAEpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACNN,EACFI,EAAQ,uBAAwCG,OAAfR,EAAS,QAAYQ,OAAN1B,EAAM,OAEnDwB,EAAK,sBAAqCE,OAAfR,EAAS,QAAYQ,OAAN1B,EAAM,M,GAEnDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputForm = document.querySelector('.form');\ninputForm.addEventListener('submit', onSubmitClick)\n\nlet firstDelay = inputForm.elements.delay;\nlet nextDelay = inputForm.elements.step;\nlet amountStepOfPromise = inputForm.elements.amount;\n\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n   \n  let delay = Number(firstDelay.value);\n\n  for (let i = 0; i < amountStepOfPromise.value; i += 1) {\n    \n    createPromise(i + 1, delay)\n    .then(result => {Notify.success(result);})\n    .catch(error => {Notify.failure(error);});\n        \n    delay += Number(nextDelay.value);\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n       if (shouldResolve) {\n         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`) ;\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      }, delay);\n    });\n\n    \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputForm","document","querySelector","addEventListener","event","preventDefault","delay","Number","$ce04d3a99e08e73b$var$firstDelay","value","i","$ce04d3a99e08e73b$var$amountStepOfPromise","$ce04d3a99e08e73b$var$createPromise","then","result","Notify","success","catch","error","failure","$ce04d3a99e08e73b$var$nextDelay","elements","step","amount","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat"],"version":3,"file":"03-promises.41d29a24.js.map"}